{"backend_state":"init","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.3"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":1,"id":"9f2422","input":"import pandas as pd \nimport numpy as np \nimport random \nimport matplotlib.pyplot as plt \n%matplotlib inline ","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"4f9838","input":"#insert 3\npreg = preg.dropna(subset=['agepreg', 'totalwgt_lb'])\npreg.size","output":{"0":{"data":{"text/plain":"2205272"},"exec_count":10,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"819e2d","input":"#insert 5\nplt.hist(preg['agepreg'])\nplt.title('Preg age frequency')\nplt.xlabel('preg age')\nplt.ylabel('counts')","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"data":{"text/plain":"Text(0, 0.5, 'counts')"},"exec_count":22,"output_type":"execute_result"},"1":{"data":{"image/png":"d4c2db434d5406c55375b2d190d622ff4253eee7","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":22,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":35,"id":"e8c959","input":"#insert 6\npreg.agepreg.value_counts(ascending=False)","output":{"0":{"data":{"text/plain":"21    636\n20    631\n23    588\n24    558\n19    557\n22    549\n18    539\n26    512\n25    508\n27    485\n28    439\n17    393\n30    392\n29    392\n31    336\n32    276\n16    237\n33    218\n34    171\n35    133\n15    126\n36     98\n37     82\n38     54\n14     43\n39     34\n40     19\n41     13\n13     11\n10      2\n42      2\n11      1\n12      1\n44      1\n43      1\nName: agepreg, dtype: int64"},"exec_count":35,"output_type":"execute_result"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"43e9a3","input":"#insert 7\npreg.agepreg.value_counts(ascending=True)","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"data":{"text/plain":"43      1\n44      1\n12      1\n11      1\n42      2\n10      2\n13     11\n41     13\n40     19\n39     34\n14     43\n38     54\n37     82\n36     98\n15    126\n35    133\n34    171\n33    218\n16    237\n32    276\n31    336\n29    392\n30    392\n17    393\n28    439\n27    485\n25    508\n26    512\n18    539\n22    549\n19    557\n24    558\n23    588\n20    631\n21    636\nName: agepreg, dtype: int64"},"exec_count":36,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":53,"id":"7045e0","input":"#insert 8\no = preg[(preg.agepreg == preg.agepreg.max())]\nprint('oldest age:', o.agepreg.values[0], 'weight:', o.totalwgt_lb.values[0])\ny = preg[(preg.agepreg == preg.agepreg.min())]\nprint('youngest age:', y.agepreg.values[0], 'weight:', y.totalwgt_lb.values[0])\n# probably just by chance the weights are the same","output":{"0":{"name":"stdout","output_type":"stream","text":"oldest age: 44 weight: 6.4375\nyoungest age: 10 weight: 6.4375\n"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":62,"id":"15ba77","input":"#insert 9\nprint('avg age: ', preg.agepreg.mean())\nprint('25th quartile: ', preg.agepreg.quantile(q=0.25))\nprint('75th quartile: ', preg.agepreg.quantile(q=0.75))","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"name":"stdout","output_type":"stream","text":"avg age:  24.47975215755698\n25th quartile:  20.0\n75th quartile:  28.0\n"}},"pos":18,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":64,"id":"e4dee9","input":"#insert 4\npreg['agepreg'] = preg['agepreg'].astype(int)","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":67,"id":"a39e01","input":"#insert 10\nprint('avg of youngest 25%: ', preg[(preg.agepreg <= 20)].totalwgt_lb.mean())\nprint('avg of oldest 25%: ', preg[(preg.agepreg >= 28)].totalwgt_lb.mean())","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"name":"stdout","output_type":"stream","text":"avg of youngest 25%:  7.1012150728059815\navg of oldest 25%:  7.369950206689214\n"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"336f4d","input":"#insert 1\npreg = pd.read_csv('data/2002FemPreg.csv', index_col = 0)\npreg.columns = preg.columns.str.strip()\npreg.head()\npreg.size","output":{"0":{"data":{"text/plain":"3316692"},"exec_count":7,"output_type":"execute_result"}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"3cd904","input":"#insert 2\npreg = preg[(preg.outcome == 1)]\npreg.head()\npreg.size","output":{"0":{"data":{"text/plain":"2232112"},"exec_count":8,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":80,"id":"736121","input":"#insert 11\nyoung = preg[(preg.agepreg <= 20)].totalwgt_lb\nold = preg[(preg.agepreg >= 28)].totalwgt_lb\nplt.hist([young, old], density=True)\nplt.legend(['<=25%', '>=75%'])\nplt.xlabel('Weight')\nplt.ylabel('Frequency')\nplt.title('Weight comparison of old vs young birth')","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"data":{"text/plain":"Text(0.5, 1.0, 'Weight comparison of old vs young birth')"},"exec_count":80,"output_type":"execute_result"},"1":{"data":{"image/png":"0eae018e0feb8194a90cccc2b8c34a08af4d37e3","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":80,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"markdown","id":"0f04e0","input":"8.) How old was the youngest and oldest mother in the survey and how much did their baby weigh?","pos":15,"type":"cell"}
{"cell_type":"markdown","id":"12adf6","input":"10.) Find the average birthweight for the mothers in the youngest quartile and in the oldest quartile. Might younger mothers tend to have heavier babies?","pos":19,"type":"cell"}
{"cell_type":"markdown","id":"4bf176","input":"6.) Create a frequency chart in descending order of age frequency.","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"63739a","input":"By the way, where did this large pregnancy dataset come from? I found it in a super amazing open resource, online Python statistics book called Think Stats. You should check out all of the modules here: http://greenteapress.com/thinkstats/\n\nThe dataset itself is obtained from the CDC's 2002 Cycle 6 ","pos":23,"type":"cell"}
{"cell_type":"markdown","id":"809d0d","input":"4.) Update the mother's age column so that the ages are no longer but decimals but rounded down integers. Meaning, if the woman's age is saved as 47.8, then re-save it as 47. Hint: recast the column data type as an integer.","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"9a2833","input":"5.) Make a histogram of the womens' ages. Label axes and give a title.","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"a9103b","input":"9.) What is the average woman's age? What is the woman's age in the 25th quartile? The 75th?","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"b14464","input":"2.) Reduce the dataframe to only contain data on live births (meaning the preg.outcome == 1).","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"b2530a","input":"7.) Create a frequency chart in ascending order of age.","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"c79c37","input":"11.) Make a comparative histogram of baby weights for mothers in the youngest and oldest quartile.","pos":21,"type":"cell"}
{"cell_type":"markdown","id":"cf2f63","input":"3.) Reduce the data frame further to consider data for only non-null baby weights (totalwgt_lb) and non-null mother's age values (agepreg).","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"d81099","input":"1.) Once again, read in the file '2002FemPreg.csv'. Strip any whitespace from the column names. ","pos":0,"type":"cell"}
{"id":0,"time":1615677689291,"type":"user"}
{"last_load":1615677689152,"type":"file"}