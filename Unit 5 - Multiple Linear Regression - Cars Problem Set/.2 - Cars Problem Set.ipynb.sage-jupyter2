{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-e4a42ab5-2d31-4fd9-8b74-6adc2eccae8e.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"74e662","input":"","pos":35,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"55f15d","input":"#insert 3\none_hot = pd.get_dummies(df['make'])\ndf = df.drop('make', axis = 1)\nnew_df = df.join(one_hot)\nnew_df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>wheel-base</th>\n      <th>length</th>\n      <th>width</th>\n      <th>height</th>\n      <th>curb-weight</th>\n      <th>engine-size</th>\n      <th>bore</th>\n      <th>stroke</th>\n      <th>compression-ratio</th>\n      <th>horsepower</th>\n      <th>...</th>\n      <th>mitsubishi</th>\n      <th>nissan</th>\n      <th>peugot</th>\n      <th>plymouth</th>\n      <th>porsche</th>\n      <th>saab</th>\n      <th>subaru</th>\n      <th>toyota</th>\n      <th>volkswagen</th>\n      <th>volvo</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>88.6</td>\n      <td>168.8</td>\n      <td>64.1</td>\n      <td>48.8</td>\n      <td>2548</td>\n      <td>130</td>\n      <td>3.47</td>\n      <td>2.68</td>\n      <td>9.0</td>\n      <td>111.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>94.5</td>\n      <td>171.2</td>\n      <td>65.5</td>\n      <td>52.4</td>\n      <td>2823</td>\n      <td>152</td>\n      <td>2.68</td>\n      <td>3.47</td>\n      <td>9.0</td>\n      <td>154.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>99.8</td>\n      <td>176.6</td>\n      <td>66.2</td>\n      <td>54.3</td>\n      <td>2337</td>\n      <td>109</td>\n      <td>3.19</td>\n      <td>3.40</td>\n      <td>10.0</td>\n      <td>102.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>99.4</td>\n      <td>176.6</td>\n      <td>66.4</td>\n      <td>54.3</td>\n      <td>2824</td>\n      <td>136</td>\n      <td>3.19</td>\n      <td>3.40</td>\n      <td>8.0</td>\n      <td>115.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>99.8</td>\n      <td>177.3</td>\n      <td>66.3</td>\n      <td>53.1</td>\n      <td>2507</td>\n      <td>136</td>\n      <td>3.19</td>\n      <td>3.40</td>\n      <td>8.5</td>\n      <td>110.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 35 columns</p>\n</div>","text/plain":"   wheel-base  length  width  height  curb-weight  engine-size  bore  stroke  \\\n0        88.6   168.8   64.1    48.8         2548          130  3.47    2.68   \n1        94.5   171.2   65.5    52.4         2823          152  2.68    3.47   \n2        99.8   176.6   66.2    54.3         2337          109  3.19    3.40   \n3        99.4   176.6   66.4    54.3         2824          136  3.19    3.40   \n4        99.8   177.3   66.3    53.1         2507          136  3.19    3.40   \n\n   compression-ratio  horsepower  ...  mitsubishi  nissan  peugot  plymouth  \\\n0                9.0       111.0  ...           0       0       0         0   \n1                9.0       154.0  ...           0       0       0         0   \n2               10.0       102.0  ...           0       0       0         0   \n3                8.0       115.0  ...           0       0       0         0   \n4                8.5       110.0  ...           0       0       0         0   \n\n   porsche  saab  subaru  toyota  volkswagen  volvo  \n0        0     0       0       0           0      0  \n1        0     0       0       0           0      0  \n2        0     0       0       0           0      0  \n3        0     0       0       0           0      0  \n4        0     0       0       0           0      0  \n\n[5 rows x 35 columns]"},"exec_count":10,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"b9ae0e","input":"new_df.columns","output":{"0":{"data":{"text/plain":"Index(['wheel-base', 'length', 'width', 'height', 'curb-weight', 'engine-size',\n       'bore', 'stroke', 'compression-ratio', 'horsepower', 'peak-rpm',\n       'city-mpg', 'highway-mpg', 'price', 'alfa-romero', 'audi', 'bmw',\n       'chevrolet', 'dodge', 'honda', 'isuzu', 'jaguar', 'mazda',\n       'mercedes-benz', 'mercury', 'mitsubishi', 'nissan', 'peugot',\n       'plymouth', 'porsche', 'saab', 'subaru', 'toyota', 'volkswagen',\n       'volvo'],\n      dtype='object')"},"exec_count":12,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"2fa2e7","input":"","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>make</th>\n      <th>wheel-base</th>\n      <th>length</th>\n      <th>width</th>\n      <th>height</th>\n      <th>curb-weight</th>\n      <th>engine-size</th>\n      <th>bore</th>\n      <th>stroke</th>\n      <th>compression-ratio</th>\n      <th>horsepower</th>\n      <th>peak-rpm</th>\n      <th>city-mpg</th>\n      <th>highway-mpg</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>alfa-romero</td>\n      <td>88.6</td>\n      <td>168.8</td>\n      <td>64.1</td>\n      <td>48.8</td>\n      <td>2548</td>\n      <td>130</td>\n      <td>3.47</td>\n      <td>2.68</td>\n      <td>9.0</td>\n      <td>111.0</td>\n      <td>5000.0</td>\n      <td>21</td>\n      <td>27</td>\n      <td>16500.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>alfa-romero</td>\n      <td>94.5</td>\n      <td>171.2</td>\n      <td>65.5</td>\n      <td>52.4</td>\n      <td>2823</td>\n      <td>152</td>\n      <td>2.68</td>\n      <td>3.47</td>\n      <td>9.0</td>\n      <td>154.0</td>\n      <td>5000.0</td>\n      <td>19</td>\n      <td>26</td>\n      <td>16500.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>audi</td>\n      <td>99.8</td>\n      <td>176.6</td>\n      <td>66.2</td>\n      <td>54.3</td>\n      <td>2337</td>\n      <td>109</td>\n      <td>3.19</td>\n      <td>3.40</td>\n      <td>10.0</td>\n      <td>102.0</td>\n      <td>5500.0</td>\n      <td>24</td>\n      <td>30</td>\n      <td>13950.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>audi</td>\n      <td>99.4</td>\n      <td>176.6</td>\n      <td>66.4</td>\n      <td>54.3</td>\n      <td>2824</td>\n      <td>136</td>\n      <td>3.19</td>\n      <td>3.40</td>\n      <td>8.0</td>\n      <td>115.0</td>\n      <td>5500.0</td>\n      <td>18</td>\n      <td>22</td>\n      <td>17450.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>audi</td>\n      <td>99.8</td>\n      <td>177.3</td>\n      <td>66.3</td>\n      <td>53.1</td>\n      <td>2507</td>\n      <td>136</td>\n      <td>3.19</td>\n      <td>3.40</td>\n      <td>8.5</td>\n      <td>110.0</td>\n      <td>5500.0</td>\n      <td>19</td>\n      <td>25</td>\n      <td>15250.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"          make  wheel-base  length  width  height  curb-weight  engine-size  \\\n0  alfa-romero        88.6   168.8   64.1    48.8         2548          130   \n1  alfa-romero        94.5   171.2   65.5    52.4         2823          152   \n2         audi        99.8   176.6   66.2    54.3         2337          109   \n3         audi        99.4   176.6   66.4    54.3         2824          136   \n4         audi        99.8   177.3   66.3    53.1         2507          136   \n\n   bore  stroke  compression-ratio  horsepower  peak-rpm  city-mpg  \\\n0  3.47    2.68                9.0       111.0    5000.0        21   \n1  2.68    3.47                9.0       154.0    5000.0        19   \n2  3.19    3.40               10.0       102.0    5500.0        24   \n3  3.19    3.40                8.0       115.0    5500.0        18   \n4  3.19    3.40                8.5       110.0    5500.0        19   \n\n   highway-mpg    price  \n0           27  16500.0  \n1           26  16500.0  \n2           30  13950.0  \n3           22  17450.0  \n4           25  15250.0  "},"exec_count":3,"output_type":"execute_result"}},"pos":0,"type":"cell"}
{"cell_type":"code","exec_count":39,"id":"878ccf","input":"#insert 4\nx = new_df\ny = df['price']\n\nmodel = LinearRegression()\nmodel.fit(x, y)\nprint('R-squared', model.score(x,y))\nprint(f\"Adjusted R^2: {1 - (1-model.score(x, y))*(len(y)-1)/(len(y)-x.shape[1]-1)}\")","output":{"0":{"name":"stdout","output_type":"stream","text":"R-squared 1.0\nAdjusted R^2: 1.0\n"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"21f7d9","input":"#insert 5\nx = new_df.drop(columns='price')\ny = df['price']\n\nmodel = LinearRegression()\nmodel.fit(x, y)\nprint('R-squared', model.score(x,y))\nprint(f\"Adjusted R^2: {1 - (1-model.score(x, y))*(len(y)-1)/(len(y)-x.shape[1]-1)}\")","output":{"0":{"name":"stdout","output_type":"stream","text":"R-squared 0.9437778143250787\nAdjusted R^2: 0.9317554601555986\n"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"11f000","input":"#insert 6\nnew_df.corr()['price'].sort_values(ascending=False)","output":{"0":{"data":{"text/plain":"price                1.000000\nengine-size          0.888942\ncurb-weight          0.835736\nhorsepower           0.811084\nwidth                0.755783\nlength               0.695747\nwheel-base           0.590389\nbore                 0.547171\nmercedes-benz        0.525156\njaguar               0.332179\nbmw                  0.331359\nporsche              0.326952\nvolvo                0.146575\nheight               0.140256\naudi                 0.102280\nstroke               0.094849\ncompression-ratio    0.069563\npeugot               0.068240\nsaab                 0.043831\nalfa-romero          0.041214\nmercury              0.029094\nisuzu               -0.054858\nvolkswagen          -0.101012\npeak-rpm            -0.104312\nmazda               -0.110515\nnissan              -0.112382\nchevrolet           -0.112624\nplymouth            -0.126882\nmitsubishi          -0.133295\ndodge               -0.147055\nsubaru              -0.149977\nhonda               -0.168392\ntoyota              -0.185413\ncity-mpg            -0.703429\nhighway-mpg         -0.716089\nName: price, dtype: float64"},"exec_count":41,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":42,"id":"5aa917","input":"#insert 7\ncor = new_df.corr()\ncor_target = abs(cor['price'])\nrelevant_features = cor_target[cor_target>0.1]\nrelevant_features.sort_values(ascending=False)","output":{"0":{"data":{"text/plain":"price            1.000000\nengine-size      0.888942\ncurb-weight      0.835736\nhorsepower       0.811084\nwidth            0.755783\nhighway-mpg      0.716089\ncity-mpg         0.703429\nlength           0.695747\nwheel-base       0.590389\nbore             0.547171\nmercedes-benz    0.525156\njaguar           0.332179\nbmw              0.331359\nporsche          0.326952\ntoyota           0.185413\nhonda            0.168392\nsubaru           0.149977\ndodge            0.147055\nvolvo            0.146575\nheight           0.140256\nmitsubishi       0.133295\nplymouth         0.126882\nchevrolet        0.112624\nnissan           0.112382\nmazda            0.110515\npeak-rpm         0.104312\naudi             0.102280\nvolkswagen       0.101012\nName: price, dtype: float64"},"exec_count":42,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":43,"id":"199f53","input":"#insert 8\nx = new_df[relevant_features.index].drop(columns='price')\ny = new_df['price']\n\nmodel = LinearRegression()\nmodel.fit(x, y)\nprint('R-squared', model.score(x,y))\nprint(f\"Adjusted R^2: {1 - (1-model.score(x, y))*(len(y)-1)/(len(y)-x.shape[1]-1)}\")","output":{"0":{"name":"stdout","output_type":"stream","text":"R-squared 0.9420681449532273\nAdjusted R^2: 0.9326454938311619\n"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":49,"id":"eda68d","input":"#insert 9\n# cor = new_df.corr()\n# cor_target = abs(cor['price'])\nrelevant_features = cor_target[cor_target>0.7]\nrelevant_features.sort_values(ascending=False)","output":{"0":{"data":{"text/plain":"price          1.000000\nengine-size    0.888942\ncurb-weight    0.835736\nhorsepower     0.811084\nwidth          0.755783\nhighway-mpg    0.716089\ncity-mpg       0.703429\nName: price, dtype: float64"},"exec_count":49,"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":50,"id":"000d56","input":"#insert 10\nx = new_df[relevant_features.index].drop(columns='price')\ny = new_df['price']\n\nmodel = LinearRegression()\nmodel.fit(x, y)\nprint('R-squared', model.score(x,y))\nprint(f\"Adjusted R^2: {1 - (1-model.score(x, y))*(len(y)-1)/(len(y)-x.shape[1]-1)}\")","output":{"0":{"name":"stdout","output_type":"stream","text":"R-squared 0.8280993998884991\nAdjusted R^2: 0.8225838726121943\n"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":52,"id":"2fee8a","input":"#insert 11\n# y = intercept + coefficient * x\n# y = -55214.175571516935 + 635.17378815 * engine-size\n# y = -55214.175571516935 + 2.39166552 * curb-weight\n# y = -55214.175571516935 + 94.79935492 * horsepower\n# y = -55214.175571516935 + 50.71709724 * width\n# y = -55214.175571516935 - 96.33155044 * highway-mpg\n# y = -55214.175571516935 + 180.45292619 * city-mpg","pos":24,"type":"cell"}
{"cell_type":"code","exec_count":54,"id":"623152","input":"#insert 12\nmodel.predict([[550,30000,250,102,6,4]])\n# the model might not work because school buses has no equipments like normal cars, and is much more extreme than a normal car","output":{"0":{"data":{"text/plain":"array([394898.17852155])"},"exec_count":54,"output_type":"execute_result"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":57,"id":"da3805","input":"#insert 13\nsns.pairplot(new_df[relevant_features.index], height = 1.2, aspect=1.5)","output":{"0":{"data":{"text/plain":"<seaborn.axisgrid.PairGrid at 0x7f3ec52f9b20>"},"exec_count":57,"output_type":"execute_result"},"1":{"data":{"image/png":"5364f744a269ff8aed41a29a1991e07a70109641","text/plain":"<Figure size 907.2x604.8 with 56 Axes>"},"exec_count":57,"metadata":{"image/png":{"height":596,"width":893},"needs_background":"light"},"output_type":"execute_result"}},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":62,"id":"2bbfd5","input":"#insert 14\nlog_df = pd.DataFrame()\nlog_df['log_price'] = np.log(new_df['price'])\nlog_df['log_engine-size'] = np.log(new_df['engine-size'])\nlog_df['log_horsepower'] = np.log(new_df['horsepower'])\nlog_df['width'] = new_df['width']\nlog_df['curb-weight'] = new_df['curb-weight']\nlog_df['city-mpg'] = new_df['city-mpg']\nlog_df['highway-mpg'] = new_df['highway-mpg']\nlog_df","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>log_price</th>\n      <th>log_engine-size</th>\n      <th>log_horsepower</th>\n      <th>width</th>\n      <th>curb-weight</th>\n      <th>city-mpg</th>\n      <th>highway-mpg</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>9.711116</td>\n      <td>4.867534</td>\n      <td>4.709530</td>\n      <td>64.1</td>\n      <td>2548</td>\n      <td>21</td>\n      <td>27</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>9.711116</td>\n      <td>5.023881</td>\n      <td>5.036953</td>\n      <td>65.5</td>\n      <td>2823</td>\n      <td>19</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9.543235</td>\n      <td>4.691348</td>\n      <td>4.624973</td>\n      <td>66.2</td>\n      <td>2337</td>\n      <td>24</td>\n      <td>30</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>9.767095</td>\n      <td>4.912655</td>\n      <td>4.744932</td>\n      <td>66.4</td>\n      <td>2824</td>\n      <td>18</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>9.632335</td>\n      <td>4.912655</td>\n      <td>4.700480</td>\n      <td>66.3</td>\n      <td>2507</td>\n      <td>19</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>189</th>\n      <td>9.731809</td>\n      <td>4.948760</td>\n      <td>4.736198</td>\n      <td>68.9</td>\n      <td>2952</td>\n      <td>23</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>190</th>\n      <td>9.854560</td>\n      <td>4.948760</td>\n      <td>5.075174</td>\n      <td>68.8</td>\n      <td>3049</td>\n      <td>19</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>191</th>\n      <td>9.975110</td>\n      <td>5.153292</td>\n      <td>4.897840</td>\n      <td>68.9</td>\n      <td>3012</td>\n      <td>18</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>192</th>\n      <td>10.019936</td>\n      <td>4.976734</td>\n      <td>4.663439</td>\n      <td>68.9</td>\n      <td>3217</td>\n      <td>26</td>\n      <td>27</td>\n    </tr>\n    <tr>\n      <th>193</th>\n      <td>10.026811</td>\n      <td>4.948760</td>\n      <td>4.736198</td>\n      <td>68.9</td>\n      <td>3062</td>\n      <td>19</td>\n      <td>25</td>\n    </tr>\n  </tbody>\n</table>\n<p>194 rows Ã— 7 columns</p>\n</div>","text/plain":"     log_price  log_engine-size  log_horsepower  width  curb-weight  city-mpg  \\\n0     9.711116         4.867534        4.709530   64.1         2548        21   \n1     9.711116         5.023881        5.036953   65.5         2823        19   \n2     9.543235         4.691348        4.624973   66.2         2337        24   \n3     9.767095         4.912655        4.744932   66.4         2824        18   \n4     9.632335         4.912655        4.700480   66.3         2507        19   \n..         ...              ...             ...    ...          ...       ...   \n189   9.731809         4.948760        4.736198   68.9         2952        23   \n190   9.854560         4.948760        5.075174   68.8         3049        19   \n191   9.975110         5.153292        4.897840   68.9         3012        18   \n192  10.019936         4.976734        4.663439   68.9         3217        26   \n193  10.026811         4.948760        4.736198   68.9         3062        19   \n\n     highway-mpg  \n0             27  \n1             26  \n2             30  \n3             22  \n4             25  \n..           ...  \n189           28  \n190           25  \n191           23  \n192           27  \n193           25  \n\n[194 rows x 7 columns]"},"exec_count":62,"output_type":"execute_result"}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":63,"id":"dd12e4","input":"#insert 15\nsns.pairplot(log_df, height = 1.2, aspect=1.5)","output":{"0":{"data":{"text/plain":"<seaborn.axisgrid.PairGrid at 0x7f3eb5c33fa0>"},"exec_count":63,"output_type":"execute_result"},"1":{"data":{"image/png":"0ed9ef75c9e4d1feab6ae41bfc7aeaf75fac909a","text/plain":"<Figure size 907.2x604.8 with 56 Axes>"},"exec_count":63,"metadata":{"image/png":{"height":595,"width":893},"needs_background":"light"},"output_type":"execute_result"}},"pos":32,"type":"cell"}
{"cell_type":"code","exec_count":64,"id":"c47b5e","input":"#insert 16\nx = log_df.drop(columns='log_price')\ny = log_df['log_price']\n\nmodel = LinearRegression()\nmodel.fit(x, y)\nprint('R-squared', model.score(x,y))\nprint(f\"Adjusted R^2: {1 - (1-model.score(x, y))*(len(y)-1)/(len(y)-x.shape[1]-1)}\")","output":{"0":{"name":"stdout","output_type":"stream","text":"R-squared 0.8684328592120703\nAdjusted R^2: 0.8642114536252917\n"}},"pos":34,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"ac5286","input":"import pandas as pd\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"a23d4d","input":"#insert 1\ndf = pd.read_csv('data/cars.csv')\ndf = df.drop(columns=['Unnamed: 0'])","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"f3c423","input":"#insert 2\n# descending means getting smaller right\ndf['make'].value_counts()\ndf.value_counts('make')","output":{"0":{"data":{"text/plain":"make\ntoyota           32\nnissan           18\nmazda            13\nmitsubishi       13\nhonda            13\nsubaru           12\nvolkswagen       12\npeugot           11\nvolvo            11\ndodge             9\nbmw               8\nmercedes-benz     8\nplymouth          7\naudi              6\nsaab              6\nporsche           4\njaguar            3\nchevrolet         3\nalfa-romero       2\nisuzu             2\nmercury           1\ndtype: int64"},"exec_count":9,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"markdown","id":"1e7b4d","input":"13.Do a sns pair-wise plot of the 6 predictor variables and price.","pos":27,"type":"cell"}
{"cell_type":"markdown","id":"2235a9","input":"1.Read in the data from data/cars.csv and call it \"df\". This is a slightly smaller, cleaned dataset from this original dataset:\n\nhttps://archive.ics.uci.edu/ml/datasets/automobile","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"4699a8","input":"4.Let's do something wrong and see what happens. Let X correspond to all of the input data in new_df (including price) and let y correspond to the target variable (price). Run a linear regression on the entire dataset and print both R^2 and the adjusted R^2. Why do you get what you get?","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"479b2d","input":"11.Write the equation of the linear regression model. You can do this in markdown or using hashtags.","pos":23,"type":"cell"}
{"cell_type":"markdown","id":"55ee8c","input":"2.Create a frequency chart for \"make\" in descending order of frequency. Hint: use value_counts.","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"5d3931","input":"10.Run a linear regression model using this reduced input:","pos":21,"type":"cell"}
{"cell_type":"markdown","id":"7046a5","input":"6.Sort the correlations of each variable with respect to price in decending order to view which variables are most and least influential. Are there any surprises?","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"7097e8","input":"5.In the cell below, correct your mistake above in order and run a linear regression again. Print both R^2 and the adjusted R^2.","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"7606cd","input":"7.Read the \"Filter Method\" section of the article located here:\n    \nhttps://towardsdatascience.com/feature-selection-with-pandas-e3690ad8504b\n    \nUse it to create a list of columns called \"relevant_features\" that contains only the variables whose correlations with price had an absolute value greater than 0.1. ","pos":15,"type":"cell"}
{"cell_type":"markdown","id":"8280d3","input":"12.The stats on a school bus are width = 102 inches, curb-weight = 30000 pounds, engine-size = 550, horsepower = 250, city-mpg = 4, highway-mpg = 6. Use model.predict to predict the price of the school bus. Why might you have reservations in using this model to do this?","pos":25,"type":"cell"}
{"cell_type":"markdown","id":"8bf6f1","input":"8.Run a linear regression again but now only with input corresponding to the relevant features. \n\nHint: \"X = new_df[relevant_features.index]\" is a line that may be helpful.\n\nHow does your adjusted R^2 here compare to the adjusted R^2 obtained you obtained above by using all columns except for price as your input?","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"973fdf","input":"14.We have been sweeping something under the rug...the histograms should appear somewhat normally distributed if we want to use linear regression. The price, engine-size, and horse-power histograms look especially skewed. Create a new dataframe that contains **seven** variables: the original width, curb-weight, city-mpg, and highway-mpg, and the logs of the price, engine-size, and horsepower columns.\n\nHint: X['log_price'] = np.log(X['price']) is a quick way to make a new column.","pos":29,"type":"cell"}
{"cell_type":"markdown","id":"b1e991","input":"9.For the sake of simplicity, reduce our dataset even further to contain only columns whose correlations with price are greater than 0.7 and print the head of the dataset:","pos":19,"type":"cell"}
{"cell_type":"markdown","id":"c61267","input":"3.Drop the \"make\" column from the dataframe, replacing it with one-hot columns corresponding to each make. This updated dataframe should be called \"new_df\" and it should contain 35 columns.","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"d52729","input":"16.Run a linear regression on this transformed dataset, using log_price as your target variable, Did your R^2 improve by transforming the data?","pos":33,"type":"cell"}
{"cell_type":"markdown","id":"eed59f","input":"15.Create a new sns-pairplot of this data to verify that the histograms look a bit more normally distributed:","pos":31,"type":"cell"}
{"id":0,"time":1615270706404,"type":"user"}
{"last_load":1615911615980,"type":"file"}